/home/Talen/miniconda3/envs/cv4ecology2/lib/python3.9/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
/home/Talen/miniconda3/envs/cv4ecology2/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/Talen/miniconda3/envs/cv4ecology2/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet18_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet18_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Epoch 1/250
[Train] Loss: 0.55; OA: 80.23%; class 1 acc: 75.00%:  13%|████▎                            | 76/583 [01:38<06:41,  1.26it/s]Traceback (most recent call last):
  File "/home/Talen/foragefish_classifier/ct_classifier/train.py", line 368, in <module>
    # (i.e., "python ct_classifier/train.py").
  File "/home/Talen/foragefish_classifier/ct_classifier/train.py", line 337, in main
    if not cfg['only_validate']:
  File "/home/Talen/foragefish_classifier/ct_classifier/train.py", line 186, in train
    loss_total += loss.item()                       # the .item() command retrieves the value of a single-valued tensor, regardless of its data type and device of tensor
KeyboardInterrupt
Traceback (most recent call last):
  File "/home/Talen/foragefish_classifier/ct_classifier/train.py", line 368, in <module>
    # (i.e., "python ct_classifier/train.py").
  File "/home/Talen/foragefish_classifier/ct_classifier/train.py", line 337, in main
    if not cfg['only_validate']:
  File "/home/Talen/foragefish_classifier/ct_classifier/train.py", line 186, in train
    loss_total += loss.item()                       # the .item() command retrieves the value of a single-valued tensor, regardless of its data type and device of tensor
KeyboardInterrupt
